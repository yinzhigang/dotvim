#extends html

snippet @page
<%@page contentType="text/html" pageEncoding="UTF-8"%>
endsnippet

snippet jstl
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
endsnippet

snippet jstl:c
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
endsnippet

snippet jstl:fn
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
endsnippet

snippet cpath
${pageContext.request.contextPath}
endsnippet

snippet cout
<c:out value="${1}" default="${2}" />
endsnippet

snippet cset
<c:set var="${1}" value="${2}" />
endsnippet

snippet cremove
<c:remove var="${1}" scope="${2:page}" />
endsnippet

snippet ccatch
<c:catch var="${1}" />
endsnippet

snippet cif
<c:if test="${${1}}">
${2}
</c:if>
endsnippet

snippet cchoose
<c:choose>
${1}
</c:choose>
endsnippet

snippet cwhen
<c:when test="${${1}}">
${2}
</c:when>
endsnippet

snippet cother
<c:otherwise>
${1}
</c:otherwise>
endsnippet

snippet cfore
<c:forEach items="${${1}}" var="${2}" varStatus="${3}">
${4:<c:out value="$2" />}
</c:forEach>
endsnippet

snippet cfort
<c:set var="${1}">${2:item1,item2,item3}</c:set>
<c:forTokens var="${3}" items="${$1}" delims="${4:,}">
${5:<c:out value="$3" />}
</c:forTokens>
endsnippet

snippet cparam
<c:param name="${1}" value="${2}" />
endsnippet

snippet cparam+
<c:param name="${1}" value="${2}" />
cparam+${3}
endsnippet

snippet cimport
<c:import url="${1}" />
endsnippet

snippet cimport+
<c:import url="${1}">
<c:param name="${2}" value="${3}" />
cparam+${4}
</c:import>
endsnippet

snippet curl
<c:url value="${1}" var="${2}" />
<a href="${$2}">${3}</a>
endsnippet

snippet curl+
<c:url value="${1}" var="${2}">
<c:param name="${4}" value="${5}" />
cparam+${6}
</c:url>
<a href="${$2}">${3}</a>
endsnippet

snippet credirect
<c:redirect url="${1}" />
endsnippet

snippet contains
${fn:contains(${1:string}, ${2:substr})}
endsnippet

snippet contains:i
${fn:containsIgnoreCase(${1:string}, ${2:substr})}
endsnippet

snippet endswith
${fn:endsWith(${1:string}, ${2:suffix})}
endsnippet

snippet escape
${fn:escapeXml(${1:string})}
endsnippet

snippet indexof
${fn:indexOf(${1:string}, ${2:substr})}
endsnippet

snippet join
${fn:join(${1:collection}, ${2:delims})}
endsnippet

snippet length
${fn:length(${1:collection_or_string})}
endsnippet

snippet replace
${fn:replace(${1:string}, ${2:substr}, ${3:replace})}
endsnippet

snippet split
${fn:split(${1:string}, ${2:delims})}
endsnippet

snippet startswith
${fn:startsWith(${1:string}, ${2:prefix})}
endsnippet

snippet substr
${fn:substring(${1:string}, ${2:begin}, ${3:end})}
endsnippet

snippet substr:a
${fn:substringAfter(${1:string}, ${2:substr})}
endsnippet

snippet substr:b
${fn:substringBefore(${1:string}, ${2:substr})}
endsnippet

snippet lc
${fn:toLowerCase(${1:string})}
endsnippet

snippet uc
${fn:toUpperCase(${1:string})}
endsnippet

snippet trim
${fn:trim(${1:string})}
endsnippet